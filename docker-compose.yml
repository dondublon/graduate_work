version: '3.5'

services:
  backend:
    build:
      context:
        ./backend
    env_file:
      - ./.env
    expose:
      - "8000"
    depends_on:
      - mongo
    volumes:
      - ./backend/src:/app  # temporary, to debug
    logging:
      driver: "json-file"
      options:
        max-file: "20"
        max-size: "100m"
    networks:
      - development_network

  mongo:
    container_name: mongosingle
    image: mongo
    expose:
      - "27017"
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ~/tmp/mongo_single/data1:/data/db
    networks:
      - development_network

  logstash:
    image: logstash:7.10.1
    env_file:
      - ./.env
    environment:
      XPACK_MONITORING_ENABLED: "true"
    expose:
      - "5043/udp"
    volumes:
      - ./deploy/logstash.conf:/config/logstash.conf:ro
      - ./tmp/logs/nginx/:/var/log/nginx/:ro
    command: logstash -f /config/logstash.conf
    networks:
      - development_network

  elasticsearch:
    image: elasticsearch:7.10.1
    environment:
      - xpack.security.enabled=false
      - ES_JAVA_OPTS=-Xms1g -Xmx1g
      - discovery.type=single-node
    ports:
      - "9200:9200"
    volumes:
      - /tmp/esdata:/tmp/elasticsearch/data
    networks:
      - development_network

  kibana:
    image: kibana:7.10.1
    expose:
      - "5601"
    depends_on:
      - elasticsearch
    networks:
      - development_network

  nginx:
    image: nginx:1.23.2
    container_name: nginx_backend
    env_file:
      - ./.env
    logging:
      driver: gelf
      options:
        gelf-address: udp://localhost:${LOGSTASH_PORT}
        tag: nginx
    volumes:
      - ./configs/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./configs/site.conf:/etc/nginx/conf.d/site.conf:ro
      - ./tmp/logs/nginx/:/var/log/nginx/
    depends_on:
      - backend
    ports:
      - "80:80"
    networks:
      - development_network
    restart: always

networks:
  development_network:
    name: development_network
    external: true